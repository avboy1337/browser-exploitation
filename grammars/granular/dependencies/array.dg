%section% := value

any_arr :=
    +arrtype+


statement :=
    +any_arr+[+common:int+]
    +any_arr+[+common:decimal_number+]
    delete +any_arr+[+common:byte_int+]
    +any_arr+.length
    +any_arr+.length = +value:valtype+
    +any_arr+.copyWithin(+common:int+)
    +any_arr+.copyWithin(+common:int+, +common:int+)
    +any_arr+.copyWithin(+common:int+, +common:int+, +common:int+)
    +any_arr+.fill(+value:valtype+)
    +any_arr+.fill(+value:valtype+, +common:int+)
    +any_arr+.fill(+value:valtype+, +common:int+, +common:int+)
    +any_arr+.pop()
    +any_arr+.push(+value:valtype+)
    +any_arr+.reverse()
    +any_arr+.shift()
    +any_arr+.sort(+callback:two_op_compare+)
    +any_arr+.splice(+common:int+, +common:int+, %repeat%(+value:valtype+, ", "))
    +any_arr+.unshift(%repeat%(+value:valtype+, ", "))
    +any_arr+.includes(+value:valtype+)
    +any_arr+.indexOf(+value:valtype+)
    +any_arr+.join()
    +any_arr+.join(+value:valtype+)
    +any_arr+.lastIndexOf(+value:valtype+)
    +any_arr+.entries()
    +any_arr+.slice()
    +any_arr+.slice(+common:int+)
    +any_arr+.slice(+common:int+, +common:int+)
    +any_arr+.toString()
    +any_arr+.toLocaleString()
    +any_arr+.toLocaleString(+intl:locale_str+)
    +any_arr+.every(+callback:one_op_predicate+)
    +any_arr+.filter(+callback:one_op_predicate+)
    +any_arr+.find(+callback:find_callback+)
    +any_arr+.findIndex(+callback:find_callback+)
    +any_arr+.forEach(+callback:one_op_predicate+)
    +any_arr+.keys()
    +any_arr+.map(+callback:map_callback+)
    +any_arr+.reduce(+callback:reduce_callback+, +value:valtype+)
    +any_arr+.reduceRight(+callback:reduce_callback+, +value:valtype+)
    +any_arr+.some(+callback:one_op_predicate+)
    +any_arr+.values()
    +any_arr+[+common:int+ % +any_arr+.length]
    +any_arr+[+common:int+ % +any_arr+.length] = +value:valtype+
    +any_arr+[+common:int+] = +value:valtype+
    +any_arr+[+common:decimal_number+] = +value:valtype+

arrtype :=
    [%repeat%(+value:valtype+, ",")]
    [%repeat%(+common:decimal_number+, ",")]
    new Array(+common:short_int+)
